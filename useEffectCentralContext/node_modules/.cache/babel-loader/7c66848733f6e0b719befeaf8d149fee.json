{"ast":null,"code":"var _jsxFileName = \"/Users/jackyao/learn_react/useEffectCentralContext/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // if we do this way, it will create an infinite loop\n  // whenever we call the set state, this component will re-execute\n  // hence we need to use useEffect and move below code into useEffect\n  // const storedUserLoggedIn = localStorage.getItem('isLoggedIn');\n  // if (storedUserLoggedIn) {\n  //   setIsLoggedIn(true);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jackyao/learn_react/useEffectCentralContext/src/App.js"],"names":["React","Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","useState","onLogout","logoutHandler","loginHandler"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,KAAD,CAA5C,CADa,CAGb;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC3BF,MAAAA,UAAU,EAAEA,UADe;AAE3BG,MAAAA,QAAQ,EAAEC;AAFiB,KAA7B;AAAA,4BAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,iBACG,CAACJ,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGL,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAxBQL,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // if we do this way, it will create an infinite loop\n  // whenever we call the set state, this component will re-execute\n  // hence we need to use useEffect and move below code into useEffect\n  // const storedUserLoggedIn = localStorage.getItem('isLoggedIn');\n\n  // if (storedUserLoggedIn) {\n  //   setIsLoggedIn(true);\n  // }\n \n  return (\n    <AuthContext.Provider value={{ \n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n      }}>\n      <MainHeader/>\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}