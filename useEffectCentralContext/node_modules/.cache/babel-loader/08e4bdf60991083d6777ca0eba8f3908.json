{"ast":null,"code":"var _jsxFileName = \"/Users/jackyao/learn_react/useEffectCentralContext/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  ctx = useContext(AuthContext); // if we do this way, it will create an infinite loop\n  // whenever we call the set state, this component will re-execute\n  // hence we need to use useEffect and move below code into useEffect\n  // const storedUserLoggedIn = localStorage.getItem('isLoggedIn');\n  // if (storedUserLoggedIn) {\n  //   setIsLoggedIn(true);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jackyao/learn_react/useEffectCentralContext/src/App.js"],"names":["React","useContext","Login","Home","MainHeader","App","ctx","AuthContext","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbC,EAAAA,GAAG,GAAGL,UAAU,CAACM,WAAD,CAAhB,CADa,CAEb;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBAEE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACG,CAACD,GAAG,CAACE,UAAL,iBAAmB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADtB,EAEGF,GAAG,CAACE,UAAJ,iBAAkB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD;;GArBQH,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, {useContext} from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  ctx = useContext(AuthContext);\n  // if we do this way, it will create an infinite loop\n  // whenever we call the set state, this component will re-execute\n  // hence we need to use useEffect and move below code into useEffect\n  // const storedUserLoggedIn = localStorage.getItem('isLoggedIn');\n\n  // if (storedUserLoggedIn) {\n  //   setIsLoggedIn(true);\n  // }\n\n  return (\n\n    <React.Fragment>\n      <MainHeader />\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}