{"ast":null,"code":"var _jsxFileName = \"/Users/jackyao/learn_react/useEffectCentralContext/src/components/Context/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  // this dummy function is for vscode auto completion\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  // move all the state here\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedIn = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedUserLoggedIn === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem(\"isLoggedIn\", \"0\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      // below two are functions\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/jackyao/learn_react/useEffectCentralContext/src/components/Context/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","storedUserLoggedIn","localStorage","getItem","loginHandler","setItem","logoutHandler","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtC;AACAC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAHoB;AAItCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAJM,CAApB,CAApB;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C;AACA,QAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,kBAAkB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA3B;;AACA,QAAIF,kBAAkB,KAAK,GAA3B,EAAgC;AAC9BD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMI,YAAY,GAAG,MAAM;AACzBJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1BN,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,UAAU,EAAEA,UADP;AAEL;AACAC,MAAAA,QAAQ,EAAEY,aAHL;AAILX,MAAAA,OAAO,EAAES;AAJJ,KADT;AAAA,cAQGL,KAAK,CAACQ;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjCM;;GAAMT,mB;;KAAAA,mB;AAmCb,eAAeP,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  // this dummy function is for vscode auto completion\n  onLogout: () => {},\n  onLogin: (email, password) => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  // move all the state here\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedUserLoggedIn = localStorage.getItem(\"isLoggedIn\");\n    if (storedUserLoggedIn === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem(\"isLoggedIn\", \"0\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        // below two are functions\n        onLogout: logoutHandler,\n        onLogin: loginHandler,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}